import random
import string
import time

import pytest
from pageObjects.Entity import Entity
from pageObjects.Guarantor import Guarantor
from pageObjects.LoginPage import LoginPage
from utilities.customLogger import LogGen
from utilities.readProperties import ReadConfig


def random_generator(size=8, chars=string.ascii_lowercase + string.digits):
    return ''.join(random.choice(chars) for x in range(size))


def random_generatorpan(size=9, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for x in range(size))


def generate_random_adharnumber(length=11):
    return int(''.join([str(random.randint(6, 9))]) + ''.join([str(random.randint(0, 9)) for _ in range(length)]))


def generate_random_number(length=9):
    return int(''.join([str(random.randint(6, 9))]) + ''.join([str(random.randint(0, 9)) for _ in range(length)]))


def generate_random_yearnumber(length=0):
    return int(''.join([str(random.randint(1, 9))]) + ''.join([str(random.randint(0, 9)) for _ in range(length)]))


def generate_random_Date(length=0):
    return int(''.join([str(random.randint(1, 9))]) + ''.join([str(random.randint(1, 9)) for _ in range(length)]))


class Test_promoter:
    baseURL = ReadConfig.getApplicationURL()
    username = ReadConfig.getUsername()
    password = ReadConfig.getPassword()

    logger = LogGen.loggen()

    @pytest.mark.regression
    @pytest.mark.sanity
    def test_creating_newGuarantor(self, setup):
        self.logger.info("************* test_creating_newGuarantor **********")
        self.driver = setup
        self.driver.get(self.baseURL)
        self.driver.maximize_window()
        time.sleep(5)
        self.lp = LoginPage(self.driver)
        self.lp.setUserName(self.username)
        time.sleep(3)
        self.lp.setPassword(self.password)
        self.lp.clickLogin()
        time.sleep(5)
        self.logger.info("************* Login successful **********")
        time.sleep(5)
        self.gp = Guarantor(self.driver)
        self.gp.clickonanyentity()
        self.driver.refresh()
        time.sleep(5)
        # self.dp = Documents(self.driver)
        # self.dp.clickdocumentstab()
        # self.dp.clicklink()
        # time.sleep(5)
        self.logger.info("*************Adding New Guarantor Information **********")
        self.gp.clickguarantorstab()
        time.sleep(5)
        self.gp.clickaddnew()
        time.sleep(5)
        self.gp.setGuarantorname("Guarantor Creation")
        time.sleep(3)
        self.gp.setfathername("AGuarantor CreationB")
        time.sleep(3)
        self.gp.setmothername("KGuarantor CreationB")
        time.sleep(3)
        self.gp.clickMS()
        time.sleep(3)
        self.gp.selectMS()
        time.sleep(3)
        self.gp.setspouse("SGuarantor CreationA")
        time.sleep(3)
        self.promoterDOB = generate_random_Date()
        self.gp.setDOB(self.promoterDOB)
        # self.pp.setDOB("7")
        time.sleep(3)
        self.gp.clickGender()
        time.sleep(3)
        self.gp.selectGender()
        time.sleep(3)
        self.promoterpan = random_generatorpan() + "P"
        self.gp.setPancard(self.promoterpan)
        # self.gp.setPancard("AACCS2650K")
        time.sleep(3)
        # self.gp.setAadhar("276794591146")
        self.guarantoradhar = generate_random_adharnumber()
        self.gp.setAadhar(self.guarantoradhar)
        time.sleep(3)
        # self.gp.setEmail("")
        # self.gp.setPhoneNumber("")
        self.guarantoremail = random_generator() + "@gmail.com"
        self.gp.setEmail(self.guarantoremail)
        time.sleep(3)
        self.guarantormobile = generate_random_number()
        self.gp.setPhoneNumber(self.guarantormobile)
        time.sleep(3)
        self.gp.clickJKAccess()
        self.gp.selectJKAccessYes()
        self.gp.clickISPrimary()
        time.sleep(3)
        self.gp.selectISPrimaryYes()
        time.sleep(3)
        self.gp.clickStatus()
        self.gp.selectStatus()
        self.gp.ClickSubmitStatus()
        self.logger.info("************* guarantor Information added successful **********")
        # time.sleep(5)
        # self.driver.refresh()
        # time.sleep(5)
        # self.gp.clickguarantorstab()
        time.sleep(10)
        # @pytest.mark.regression
        # @pytest.mark.sanity
        # def test_Adding_PromoterAddress(self, setup):
        # self.gp.clicklinkEditEntity()
        time.sleep(3)
        self.gp.clickEditAddress()
        time.sleep(3)
        self.gp.setpincode("560037")
        time.sleep(5)
        self.gp.setvillage("Challakere")
        time.sleep(3)
        self.gp.setlandmark("Junction")
        time.sleep(3)
        self.gp.setAdd1("1 block")
        time.sleep(3)
        self.gp.setAdd2("Near Temple")
        time.sleep(3)
        self.gp.clickAddressType()
        time.sleep(3)
        self.gp.selectAddressType()
        time.sleep(3)
        # self.pp.setYICA()
        self.guarantorYearincurrentAddress = generate_random_yearnumber()
        self.gp.setYICA(self.guarantorYearincurrentAddress)
        time.sleep(3)
        self.gp.clickupdate()
        # time.sleep(3)
        # self.driver.refresh()
        # time.sleep(5)
        # self.gp.clickguarantorstab()
        # time.sleep(5)
        # self.gp.clicklinkEditEntity()
        time.sleep(5)
        self.logger.info("*************Adding New Guarantor Current Address **********")
        self.gp.clickcurr()
        time.sleep(3)
        self.gp.click()
        time.sleep(3)
        self.gp.update()
        time.sleep(3)
        self.logger.info("************* Current Address added successful **********")
        # self.driver.refresh()
        # time.sleep(5)
        # self.gp.clickguarantorstab()
        # time.sleep(5)
        # self.gp.clicklinkEditEntity()
        time.sleep(3)
        self.logger.info("*************Uploading New Promoter Documents **********")
        time.sleep(5)
        self.gp.uploadphoto("D://User/Rajeshwari/EntityOnboarding/TestData/Photoupload.png")
        time.sleep(5)
        self.gp.uploadsave()
        time.sleep(3)
        self.gp.uploadaadharfront("D://User/Rajeshwari/EntityOnboarding/TestData/Aadhaar_front-Test.jpg")
        time.sleep(5)
        self.gp.uploadsave()
        time.sleep(3)
        self.gp.uploadaadharback("D://User/Rajeshwari/EntityOnboarding/TestData/Aadhaar_back-Test.jpg")
        time.sleep(5)
        self.gp.uploadsave()
        time.sleep(3)
        self.gp.uploadaddressproof("D://User/Rajeshwari/EntityOnboarding/TestData/Address.pdf")
        time.sleep(5)
        self.gp.uploadsave()
        time.sleep(3)
        self.gp.uploadKYCDoc("D://User/Rajeshwari/EntityOnboarding/TestData/Address.pdf")
        time.sleep(5)
        self.gp.uploadsave()
        time.sleep(3)
        self.gp.uploadCACertifiedNetWorth("D://User/Rajeshwari/EntityOnboarding/TestData/Address.pdf")
        time.sleep(5)
        self.gp.uploadsave()
        time.sleep(3)
        self.logger.info("************* Documents uploaded successful **********")
        # time.sleep(3)
        # self.driver.refresh()
        # time.sleep(5)
        # self.gp.clickguarantorstab()
        # time.sleep(5)
        # self.gp.clicklinkEditEntity()
        time.sleep(3)
        self.logger.info("*************Adding New Guarantor Bank Details **********")
        self.gp.ClickAddBankDetails()
        time.sleep(3)
        self.gp.setAccNumber("1239211233")
        self.gp.setConfirmAccNumber("1239211233")
        time.sleep(3)
        self.gp.setAccHolderName("Testing One")
        time.sleep(3)
        self.gp.setIFSC("CNRB0004208")
        time.sleep(10)
        self.gp.clickAccountType()
        time.sleep(5)
        # self.gp.selectAccTypeCurr()
        self.gp.selectAccTypeSaving()
        self.guarantorBankMobile = generate_random_number()
        self.gp.SetMobileNumber(self.guarantorBankMobile)
        time.sleep(3)
        self.gp.clickISPrimayAcc()
        self.gp.selectISPrimaryAccYes()
        time.sleep(3)
        self.gp.clickISPrimaryAccStatus()
        self.gp.selectISPrimaryAccStatusActive()
        self.logger.info("************* Bank Details added successful **********")
        self.gp.submitBankAccount()
        time.sleep(5)
        self.gp.clickGuarantorlink()
        time.sleep(5)
        self.ep = Entity(self.driver)
        self.ep.clickentity()
        self.ep.clickuploadSatatement()
        self.ep.clickBankName()
        time.sleep(3)
        self.ep.selectBankName()
        time.sleep(3)
        self.ep.clickAccType()
        time.sleep(3)
        self.ep.selectAccTypeCurr()
        self.ep.clickDocType()
        time.sleep(3)
        self.ep.selectDocType()
        time.sleep(5)
        self.ep.uploadbankstmt("D://User/Rajeshwari/EntityOnboarding/TestData/Bank statement.pdf")
        time.sleep(100)
        self.driver.refresh()
        time.sleep(5)
        self.driver.close()

        time.sleep(3)
        self.driver.close()
